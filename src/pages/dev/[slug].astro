---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import NavBar from "@/components/NavBar";
import { Image } from "astro:assets";

// Type
type DevEntry = CollectionEntry<"dev">;

export async function getStaticPaths() {
  const devEntries = await getCollection("dev");
  const projects = devEntries.filter((entry) => entry.data.type === "project");
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

// Props
type Props = {
  project: DevEntry & { data: { type: "project"; date: Date } };
};

const { project } = Astro.props;
const { Content } = await project.render();
---

<Layout>
  <NavBar client:load />

  <main class="max-w-4xl mx-auto px-4 py-12 text-neutral-100">
    <!-- Back Button -->
    <div class="mb-6">
      <a
        href="/dev"
        class="inline-flex items-center gap-2 text-neutral-400 hover:text-white transition"
      >
        <svg
          class="w-4 h-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to Dev
      </a>
    </div>

    <!-- Header -->
    <header class="mb-10">
      <h1 class="text-4xl font-bold mb-2">{project.data.title}</h1>
      <p class="text-neutral-400 text-sm mb-2">
        {
          project.data.date.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
        {project.data.category && ` â€¢ ${project.data.category}`}
      </p>

      {
        project.data.tech && (
          <div class="flex flex-wrap gap-2 mt-4">
            {project.data.tech.map((tech: string) => (
              <span class="bg-neutral-800 text-neutral-300 text-sm px-3 py-1 rounded-full border border-neutral-700">
                {tech}
              </span>
            ))}
          </div>
        )
      }
      <div class="flex mt-auto pt-8">
        <a
          href={project.data.url}
          class="text-sm px-4 py-2 bg-neutral-100 text-black rounded hover:bg-neutral-200 transition"
        >
          See Project
        </a>
      </div>
    </header>

    <!-- Cover Image -->
    {
      project.data.coverImage && (
        <div class="mb-12 rounded-lg overflow-hidden border border-neutral-800">
          <Image
            src={project.data.coverImage}
            alt={project.data.title}
            class="w-full h-auto object-cover"
            format="webp"
            sizes="(max-width: 768px) 100vw, 768px"
          />
        </div>
      )
    }

    <!-- Markdown Content -->
    <article class="prose prose-invert prose-neutral prose-lg max-w-none">
      <Content />
    </article>

    <!-- Footer Link -->
    <footer class="mt-16 pt-8 border-t border-neutral-800">
      <a
        href="/dev"
        class="inline-flex items-center gap-2 text-neutral-400 hover:text-white transition"
      >
        <svg
          class="w-4 h-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
        View All Projects
      </a>
    </footer>
  </main>
</Layout>
