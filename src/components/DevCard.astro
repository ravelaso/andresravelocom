---
import { Image } from 'astro:assets';

export interface Props {
  project: {
    slug: string;
    data: {
      title: string;
      description: string;
      date: Date;
      url?: string;
      tech?: string[];
      coverImage?: ImageMetadata;
    };
  };
}

const { project } = Astro.props;
const { title, description, date, url, tech, coverImage } = project.data;

---

<article class="flex flex-col md:flex-row gap-6 group border border-neutral-800 rounded-xl overflow-hidden bg-neutral-950">
  <!-- Image -->
  {coverImage && (
    <div class="md:w-1/3 w-full h-48 md:h-auto">
      <Image
        src={coverImage}
        alt={title}
        class="w-full h-full object-cover grayscale group-hover:grayscale-0 transition duration-300"
      />
    </div>
  )}

  <!-- Content -->
  <div class="flex flex-col justify-between p-6 flex-1">
    <div>
      <h3 class="text-xl font-semibold text-neutral-100 mb-1">{title}</h3>
      <p class="text-sm text-neutral-500 mb-3">
        {date.toLocaleDateString(undefined, {
          year: "numeric",
          month: "short",
          day: "numeric",
        })}
      </p>
      <p class="text-neutral-300 text-sm mb-4">{description}</p>

      {tech && (
        <div class="flex flex-wrap gap-2 mb-4">
          {tech.map((t) => (
            <span class="text-xs bg-neutral-900 text-neutral-400 px-2 py-1 rounded border border-neutral-700">
              {t}
            </span>
          ))}
        </div>
      )}
    </div>

    <div class="flex gap-2 mt-2">
      <a
        href={`/dev/${project.slug}`}
        class="text-sm px-4 py-2 bg-neutral-100 text-black rounded hover:bg-neutral-200 transition"
      >
        Read More
      </a>
      {url && (
        <a
          href={url}
          target="_blank"
          class="text-sm px-4 py-2 bg-neutral-800 text-neutral-300 rounded border border-neutral-700 hover:bg-neutral-700 transition"
        >
          See Project
        </a>
      )}
    </div>
  </div>
</article>
